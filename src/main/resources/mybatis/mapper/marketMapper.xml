<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.kh.spring.market.model.repository.ShopRepository">
  
  <!-- 
  	#{} vs ${}
  	#{} : preparedStatement에서 쿼리 템플릿을 완성 시킨 뒤에 파라미터 값을 전달 받아 쿼리를 완성
  		  문자열 이스케이프처리가 자동으로 된다. SQL Injection 공격에 안전하다.
  	
  	${} : 쿼리 템플릿이 생성되는 시점에 파라미터로 전달된 값을 사용해 쿼리 템플릿을 완성
  	
   -->
  	
  	 <select id="selectPrdListBySet" resultType="Product">
  	 	select *
  	 	from (select rownum rnum, prd_idx, event_idx, sub_img_idx, name, brand, rating, price, sale_per, reg_date, type
				from (select prd_idx, event_idx, sub_img_idx, name, brand, rating, min(price) price, sale_per, reg_date, type
        				from product
        				join prd_detail using (prd_idx)
        		<choose>
	        		<when test="listSet.category != 'all'">
	        		where category = #{listSet.category} and type in ('A',
	        			<choose>
	        				<when test="listSet.check == 'true'">
								'C')
	        				</when>
	        				<otherwise>
								'D')
	        				</otherwise>
	        			</choose>
	        		</when>
	        		<otherwise>
	        		where type in ('A',
	        			<choose>
	        				<when test="listSet.check == 'true'">
								'C')
	        				</when>
	        				<otherwise>
								'D')
	        				</otherwise>
	        			</choose>
	        		</otherwise>
        		</choose>
        		GROUP BY prd_idx, event_idx, sub_img_idx, name, brand, rating, sale_per, reg_date, type
				<if test="listSet.option != null">
        		order by
        			<choose>
        				<when test="listSet.option == 'new'">
        					reg_date
        				</when>
        				<when test="listSet.option == 'pop'">
        					rating
        				</when>
        				<otherwise>
        					price
        				</otherwise>
        			</choose>
					<choose>
						<when test="listSet.option == 'low'">
							asc
						</when>
						<otherwise>
							desc
						</otherwise>
					</choose>    		
        		</if>
        		))
		where rnum between ${((pageUtil.curPage-1) * pageUtil.cntPerPage) + 1} and ${pageUtil.curPage * pageUtil.cntPerPage} 
	</select>
	
	<select id="prdListCnt" resultType="java.lang.Integer">
  	 	select count(*)
		from (select prd_idx, event_idx, sub_img_idx, name, brand, rating, min(price) price, sale_per, reg_date, type
        		from product
        		join prd_detail using (prd_idx)
        		<choose>
	        		<when test="listSet.category != 'all'">
	        		where category = #{listSet.category} and type in ('A',
	        			<choose>
	        				<when test="listSet.check == 'true'">
								'C')
	        				</when>
	        				<otherwise>
								'D')
	        				</otherwise>
	        			</choose>
	        		</when>
	        		<otherwise>
	        		where type in ('A',
	        			<choose>
	        				<when test="listSet.check == 'true'">
								'C')
	        				</when>
	        				<otherwise>
								'D')
	        				</otherwise>
	        			</choose>
	        		</otherwise>
        		</choose>
        		GROUP BY prd_idx, event_idx, sub_img_idx, name, brand, rating, sale_per, reg_date, type)
	</select>
	
	
  	
  </mapper>